package vrstypes

// autogenerated via https://github.com/0x19/jsonstruct.com

type AircraftListResponse struct {
	AcList []AircraftList `json:"acList"`
	Feeds  []struct {
		ID        int64  `json:"id"`
		Name      string `json:"name"`
		PolarPlot bool   `json:"polarPlot"`
	} `json:"feeds"`
	FlgH      int64  `json:"flgH"`      // flag height
	FlgW      int64  `json:"flgW"`      // flag width
	LastDv    string `json:"lastDv"`    // last version
	ShowFlg   bool   `json:"showFlg"`   // show flag
	ShowPic   bool   `json:"showPic"`   // show picture
	ShowSil   bool   `json:"showSil"`   // show silhouette
	ShtTrlSec int64  `json:"shtTrlSec"` // number of seconds of positions in short trail
	Src       int64  `json:"src"`       // source of feed
	SrcFeed   int64  `json:"srcFeed"`   // ID of feed
	Stm       int64  `json:"stm"`       // server time [milliseconds since epoch]
	TotalAc   int64  `json:"totalAc"`   // total number of aircraft in aclist
}

type AircraftList struct {
	Alt          int64   `json:"Alt"`          // altitude [feet at stp]
	AltT         int64   `json:"AltT"`         // alititude type
	Bad          bool    `json:"Bad"`          // known invalid ICAO
	CMsgs        int64   `json:"CMsgs"`        // number of messages received
	CNum         string  `json:"CNum"`         //
	Call         string  `json:"Call"`         // callsign
	CallSus      bool    `json:"CallSus"`      // suspicious callsign
	Cou          string  `json:"Cou"`          // registration country
	EngMount     int64   `json:"EngMount"`     // engine mount
	EngType      int64   `json:"EngType"`      // engine type
	Engines      string  `json:"Engines"`      // number of engines
	FSeen        string  `json:"FSeen"`        // first seen
	FlightsCount int64   `json:"FlightsCount"` // number of flights recorded
	From         string  `json:"From"`         // from
	Gnd          bool    `json:"Gnd"`          // aircraft is on the ground
	HasPic       bool    `json:"HasPic"`       // has picture
	HasSig       bool    `json:"HasSig"`       // has signal level
	Help         bool    `json:"Help"`         // help
	Icao         string  `json:"Icao"`         // aircraft ICAO
	ID           int64   `json:"Id"`           // aircraft id
	Interested   bool    `json:"Interested"`   // tagged as interesting
	Lat          float64 `json:"Lat"`          // latitude
	Long         float64 `json:"Long"`         // longitude
	Man          string  `json:"Man"`          // manufacturer
	Mdl          string  `json:"Mdl"`          // model
	Mil          bool    `json:"Mil"`          // operated by the military
	Mlat         bool    `json:"Mlat"`         // seen via multilateration
	Op           string  `json:"Op"`           // operator
	OpIcao       string  `json:"OpIcao"`       // operator ICAO
	PosTime      int64   `json:"PosTime"`      // time that position was last reported [milliseconds since epoch]
	Rcvr         int64   `json:"Rcvr"`         // receiver id
	Reg          string  `json:"Reg"`          // registration
	Spd          float32 `json:"Spd"`          // speed
	SpdTyp       int64   `json:"SpdTyp"`       // speed type
	Species      int64   `json:"Species"`      // aircraft type
	Sqk          string  `json:"Sqk"`          // squawk
	TSecs        int64   `json:"TSecs"`        //
	Tisb         bool    `json:"Tisb"`         //
	To           string  `json:"To"`           // to
	Trak         float32 `json:"Trak"`         // heading
	TrkH         bool    `json:"TrkH"`         // true if Trak is aircraft's heading
	Trt          int64   `json:"Trt"`          // transponder type
	Type         string  `json:"Type"`         // type
	Vsi          int64   `json:"Vsi"`          // vertical speed [feet/min]
	VsiT         int64   `json:"VsiT"`         // vertical speed type
	WTC          int64   `json:"WTC"`          // wake turbulence category
	Year         string  `json:"Year"`         // year

}
